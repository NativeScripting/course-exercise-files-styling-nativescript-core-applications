"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var modals_1 = require("~/shared/helpers/modals");
var nav_helper_1 = require("~/shared/helpers/navigation/nav.helper");
var backlog_page_vm_1 = require("~/shared/view-models/pages/backlog/backlog.page.vm");
require("~/utils/converters");
var backLogVm = new backlog_page_vm_1.BacklogViewModel();
var drawer = null;
function onNavigatingTo(args) {
    var page = args.object;
    page.bindingContext = backLogVm;
}
exports.onNavigatingTo = onNavigatingTo;
function onLoaded(args) {
    var page = args.object;
    backLogVm.refresh();
    drawer = page.getViewById('sideDrawer');
}
exports.onLoaded = onLoaded;
function toggleDrawer() {
    drawer.toggleDrawerState();
}
exports.toggleDrawer = toggleDrawer;
function onListItemTap(args) {
    nav_helper_1.goToDetailPage(args.view.bindingContext);
}
exports.onListItemTap = onListItemTap;
function onAddTap(args) {
    var button = args.object;
    modals_1.showModalNewItem(button.page).then(function (newItem) {
        return backLogVm.addNewItemHandler(newItem);
    });
}
exports.onAddTap = onAddTap;
function onRefreshRequested(args) {
    // Get reference to the PullToRefresh;
    var pullToRefresh = args.object;
    backLogVm.refresh();
    pullToRefresh.refreshing = false;
}
exports.onRefreshRequested = onRefreshRequested;
function onLogoutTap() {
    backLogVm.onLogoutTapHandler().then(function () { return nav_helper_1.goToLoginPage(); });
}
exports.onLogoutTap = onLogoutTap;
function onSettingsTap() {
    nav_helper_1.goToSettingsPage();
}
exports.onSettingsTap = onSettingsTap;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmFja2xvZy1wYWdlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiYmFja2xvZy1wYWdlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBS0Esa0RBQTJEO0FBQzNELHFFQUlnRDtBQUNoRCxzRkFBc0Y7QUFDdEYsOEJBQTRCO0FBRTVCLElBQU0sU0FBUyxHQUFxQixJQUFJLGtDQUFnQixFQUFFLENBQUM7QUFDM0QsSUFBSSxNQUFNLEdBQWtCLElBQUksQ0FBQztBQUVqQyxTQUFnQixjQUFjLENBQUMsSUFBbUI7SUFDaEQsSUFBTSxJQUFJLEdBQVMsSUFBSSxDQUFDLE1BQU0sQ0FBQztJQUMvQixJQUFJLENBQUMsY0FBYyxHQUFHLFNBQVMsQ0FBQztBQUNsQyxDQUFDO0FBSEQsd0NBR0M7QUFFRCxTQUFnQixRQUFRLENBQUMsSUFBZTtJQUN0QyxJQUFNLElBQUksR0FBUyxJQUFJLENBQUMsTUFBTSxDQUFDO0lBQy9CLFNBQVMsQ0FBQyxPQUFPLEVBQUUsQ0FBQztJQUNwQixNQUFNLEdBQUcsSUFBSSxDQUFDLFdBQVcsQ0FBQyxZQUFZLENBQUMsQ0FBQztBQUMxQyxDQUFDO0FBSkQsNEJBSUM7QUFFRCxTQUFnQixZQUFZO0lBQzFCLE1BQU0sQ0FBQyxpQkFBaUIsRUFBRSxDQUFDO0FBQzdCLENBQUM7QUFGRCxvQ0FFQztBQUVELFNBQWdCLGFBQWEsQ0FBQyxJQUFtQjtJQUMvQywyQkFBYyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsY0FBYyxDQUFDLENBQUM7QUFDM0MsQ0FBQztBQUZELHNDQUVDO0FBRUQsU0FBZ0IsUUFBUSxDQUFDLElBQWU7SUFDdEMsSUFBTSxNQUFNLEdBQVcsSUFBSSxDQUFDLE1BQU0sQ0FBQztJQUVuQyx5QkFBZ0IsQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLENBQUMsSUFBSSxDQUFDLFVBQUMsT0FBZTtRQUNqRCxPQUFBLFNBQVMsQ0FBQyxpQkFBaUIsQ0FBQyxPQUFPLENBQUM7SUFBcEMsQ0FBb0MsQ0FDckMsQ0FBQztBQUNKLENBQUM7QUFORCw0QkFNQztBQUVELFNBQWdCLGtCQUFrQixDQUFDLElBQUk7SUFDckMsc0NBQXNDO0lBQ3RDLElBQU0sYUFBYSxHQUFHLElBQUksQ0FBQyxNQUFNLENBQUM7SUFDbEMsU0FBUyxDQUFDLE9BQU8sRUFBRSxDQUFDO0lBQ3BCLGFBQWEsQ0FBQyxVQUFVLEdBQUcsS0FBSyxDQUFDO0FBQ25DLENBQUM7QUFMRCxnREFLQztBQUVELFNBQWdCLFdBQVc7SUFDekIsU0FBUyxDQUFDLGtCQUFrQixFQUFFLENBQUMsSUFBSSxDQUFDLGNBQU0sT0FBQSwwQkFBYSxFQUFFLEVBQWYsQ0FBZSxDQUFDLENBQUM7QUFDN0QsQ0FBQztBQUZELGtDQUVDO0FBRUQsU0FBZ0IsYUFBYTtJQUMzQiw2QkFBZ0IsRUFBRSxDQUFDO0FBQ3JCLENBQUM7QUFGRCxzQ0FFQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFJhZFNpZGVEcmF3ZXIgfSBmcm9tICduYXRpdmVzY3JpcHQtdWktc2lkZWRyYXdlcic7XG5pbXBvcnQgeyBCdXR0b24gfSBmcm9tICd0bnMtY29yZS1tb2R1bGVzL3VpL2J1dHRvbic7XG5pbXBvcnQgeyBJdGVtRXZlbnREYXRhIH0gZnJvbSAndG5zLWNvcmUtbW9kdWxlcy91aS9saXN0LXZpZXcnO1xuaW1wb3J0IHsgRXZlbnREYXRhLCBOYXZpZ2F0ZWREYXRhLCBQYWdlIH0gZnJvbSAndG5zLWNvcmUtbW9kdWxlcy91aS9wYWdlJztcbmltcG9ydCB7IFB0SXRlbSB9IGZyb20gJ34vY29yZS9tb2RlbHMvZG9tYWluJztcbmltcG9ydCB7IHNob3dNb2RhbE5ld0l0ZW0gfSBmcm9tICd+L3NoYXJlZC9oZWxwZXJzL21vZGFscyc7XG5pbXBvcnQge1xuICBnb1RvRGV0YWlsUGFnZSxcbiAgZ29Ub0xvZ2luUGFnZSxcbiAgZ29Ub1NldHRpbmdzUGFnZVxufSBmcm9tICd+L3NoYXJlZC9oZWxwZXJzL25hdmlnYXRpb24vbmF2LmhlbHBlcic7XG5pbXBvcnQgeyBCYWNrbG9nVmlld01vZGVsIH0gZnJvbSAnfi9zaGFyZWQvdmlldy1tb2RlbHMvcGFnZXMvYmFja2xvZy9iYWNrbG9nLnBhZ2Uudm0nO1xuaW1wb3J0ICd+L3V0aWxzL2NvbnZlcnRlcnMnO1xuXG5jb25zdCBiYWNrTG9nVm06IEJhY2tsb2dWaWV3TW9kZWwgPSBuZXcgQmFja2xvZ1ZpZXdNb2RlbCgpO1xubGV0IGRyYXdlcjogUmFkU2lkZURyYXdlciA9IG51bGw7XG5cbmV4cG9ydCBmdW5jdGlvbiBvbk5hdmlnYXRpbmdUbyhhcmdzOiBOYXZpZ2F0ZWREYXRhKSB7XG4gIGNvbnN0IHBhZ2UgPSA8UGFnZT5hcmdzLm9iamVjdDtcbiAgcGFnZS5iaW5kaW5nQ29udGV4dCA9IGJhY2tMb2dWbTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIG9uTG9hZGVkKGFyZ3M6IEV2ZW50RGF0YSkge1xuICBjb25zdCBwYWdlID0gPFBhZ2U+YXJncy5vYmplY3Q7XG4gIGJhY2tMb2dWbS5yZWZyZXNoKCk7XG4gIGRyYXdlciA9IHBhZ2UuZ2V0Vmlld0J5SWQoJ3NpZGVEcmF3ZXInKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHRvZ2dsZURyYXdlcigpIHtcbiAgZHJhd2VyLnRvZ2dsZURyYXdlclN0YXRlKCk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBvbkxpc3RJdGVtVGFwKGFyZ3M6IEl0ZW1FdmVudERhdGEpIHtcbiAgZ29Ub0RldGFpbFBhZ2UoYXJncy52aWV3LmJpbmRpbmdDb250ZXh0KTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIG9uQWRkVGFwKGFyZ3M6IEV2ZW50RGF0YSkge1xuICBjb25zdCBidXR0b24gPSA8QnV0dG9uPmFyZ3Mub2JqZWN0O1xuXG4gIHNob3dNb2RhbE5ld0l0ZW0oYnV0dG9uLnBhZ2UpLnRoZW4oKG5ld0l0ZW06IFB0SXRlbSkgPT5cbiAgICBiYWNrTG9nVm0uYWRkTmV3SXRlbUhhbmRsZXIobmV3SXRlbSlcbiAgKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIG9uUmVmcmVzaFJlcXVlc3RlZChhcmdzKSB7XG4gIC8vIEdldCByZWZlcmVuY2UgdG8gdGhlIFB1bGxUb1JlZnJlc2g7XG4gIGNvbnN0IHB1bGxUb1JlZnJlc2ggPSBhcmdzLm9iamVjdDtcbiAgYmFja0xvZ1ZtLnJlZnJlc2goKTtcbiAgcHVsbFRvUmVmcmVzaC5yZWZyZXNoaW5nID0gZmFsc2U7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBvbkxvZ291dFRhcCgpIHtcbiAgYmFja0xvZ1ZtLm9uTG9nb3V0VGFwSGFuZGxlcigpLnRoZW4oKCkgPT4gZ29Ub0xvZ2luUGFnZSgpKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIG9uU2V0dGluZ3NUYXAoKSB7XG4gIGdvVG9TZXR0aW5nc1BhZ2UoKTtcbn1cbiJdfQ==